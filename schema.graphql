enum PositionTransactionType {
  OPEN
  ADJUST
  CLOSE
  LIQUIDATION
}

type PositionTransaction @entity {
  id: ID!
  type: PositionTransactionType!
  position: Position!
  collateralToken: String
  collateralChange: BigInt
  underlyingCollateralToken: String!
  underlyingCollateralChange: BigInt!
  debtChange: BigInt!
  isLeveraged: Boolean
  timestamp: BigInt!
}

enum SavingsTransactionType {
  DEPOSIT
  WITHDRAW
}

type SavingsTransaction @entity {
  id: ID!
  type: SavingsTransactionType!
  position: Position!
  amount: BigInt!
  timestamp: BigInt!
}

type BridgeRequestTransaction @entity {
  id: ID!
  position: Position!
  amount: BigInt!
  sourceChainSelector: BigInt!
  destinationChainSelector: BigInt!
  messageId: String!
  timestamp: BigInt!
}

enum StakingTransactionType {
  DEPOSIT_FOR
  CREATE_LOCK
  INCREASE_LOCK_AMOUNT
  INCREASE_UNLOCK_TIME
  WITHDRAW
  CLAIM
}

type StakingTransaction @entity {
  id: ID!
  type: StakingTransactionType!
  position: Position!
  provider: String!
  token: String!
  amount: BigInt!
  unlockTime: BigInt
  timestamp: BigInt!
}

type Position @entity {
  id: ID!
  underlyingCollateralToken: String
  isLeveraged: Boolean
  vaultVersion: String
  transactions: [PositionTransaction!]! @derivedFrom(field: "position")
  liquidations: [Liquidation!]! @derivedFrom(field: "position")
  savings: [SavingsTransaction!]! @derivedFrom(field: "position")
  bridgeRequests: [BridgeRequestTransaction!]! @derivedFrom(field: "position")
  stakings: [StakingTransaction!]! @derivedFrom(field: "position")
}

type SavingsBalance @entity {
  id: ID!
  balance: BigInt!
}

type SaversCounter @entity {
  id: ID!
  count: BigInt!
}

type RaftHolder @entity {
  id: ID!
  balance: BigInt!
}

type RaftHoldersCounter @entity {
  id: ID!
  count: BigInt!
}

type Liquidation @entity {
  id: ID!
  position: Position!
  liquidator: String!
  transaction: PositionTransaction!
}

type Price @entity {
  id: ID!
  value: BigInt!
  updatedAt: BigInt!
}

type OpenPositionCounter @entity {
  id: ID!
  count: BigInt!
}
